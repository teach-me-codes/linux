{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Linux This online document helps the absolute beginners to persue the future direction in coding and handeling Linux operating system. Linux is the epitom of open source development initiated by Linus Torvald in 1991. The Youtube video imbeded below shows the history of development of Linux. Why use Linux? Linux is a backbone of Cloud computing. From past days, it is being selected as a standard operating system for scientific computing data mining. Two paradigms of computing called parallel and distributed computing have evolved in modern days. Both of them prefer the Linux operating system due to it's flexible administrative and server implementation. From where to learn Linux ? Yo will never regret on keeping this book in your bookself. These are the key features in the Linux operating system: File system Process User management Software Installation File/document management Storage management Networking and Server Why do people prefer Linux? Linux is also distributed under an open source license. Open source follows the following key philosophies: The freedom to run the program, for any purpose. The freedom to study how the program works, and change it to make it do what you wish. The freedom to redistribute copies so you can help your neighbor. The freedom to distribute copies of your modified versions to others. The above are crucial to understanding the community that comes together to create the Linux platform. It is, without a doubt, an operating system that is \u201cby the people, for the people\u201d. These philosophies are also one of the main reasons a large percentage of people use Linux. It\u2019s about freedom and freedom of choice. Sources www.linux.com","title":"Home"},{"location":"#linux","text":"This online document helps the absolute beginners to persue the future direction in coding and handeling Linux operating system. Linux is the epitom of open source development initiated by Linus Torvald in 1991. The Youtube video imbeded below shows the history of development of Linux.","title":"Linux"},{"location":"#why-use-linux","text":"Linux is a backbone of Cloud computing. From past days, it is being selected as a standard operating system for scientific computing data mining. Two paradigms of computing called parallel and distributed computing have evolved in modern days. Both of them prefer the Linux operating system due to it's flexible administrative and server implementation.","title":"Why use Linux?"},{"location":"#from-where-to-learn-linux","text":"Yo will never regret on keeping this book in your bookself. These are the key features in the Linux operating system: File system Process User management Software Installation File/document management Storage management Networking and Server","title":"From where to learn Linux ?"},{"location":"#why-do-people-prefer-linux","text":"Linux is also distributed under an open source license. Open source follows the following key philosophies: The freedom to run the program, for any purpose. The freedom to study how the program works, and change it to make it do what you wish. The freedom to redistribute copies so you can help your neighbor. The freedom to distribute copies of your modified versions to others. The above are crucial to understanding the community that comes together to create the Linux platform. It is, without a doubt, an operating system that is \u201cby the people, for the people\u201d. These philosophies are also one of the main reasons a large percentage of people use Linux. It\u2019s about freedom and freedom of choice.","title":"Why do people prefer Linux?"},{"location":"#sources","text":"www.linux.com","title":"Sources"},{"location":"GettingStarted/Install/","text":"Installing Linux in Window Computer: Please follow the following Video:","title":"Installing Linux"},{"location":"GettingStarted/Install/#installing-linux-in-window-computer","text":"Please follow the following Video:","title":"Installing Linux in Window Computer:"},{"location":"GettingStarted/Linux/","text":"What is Linux? Just like Windows XP, Windows 7, Windows 8, and Mac OS X, Linux is an operating system. An operating system is software that manages all of the hardware resources associated with your desktop or laptop. To put it simply \u2013 the operating system manages the communication between your software and your hardware. Without the operating system (often referred to as the \u201cOS\u201d), the software wouldn\u2019t function. The OS is comprised of a number of pieces: The Bootloader: The software that manages the boot process of your computer. For most users, this will simply be a splash screen that pops up and eventually goes away to boot into the operating system. The kernel: This is the one piece of the whole that is actually called \u201cLinux\u201d. The kernel is the core of the system and manages the CPU, memory, and peripheral devices. The kernel is the \u201clowest\u201d level of the OS. Daemons: These are background services (printing, sound, scheduling, etc) that either start up during boot, or after you log into the desktop. The Shell: You\u2019ve probably heard mention of the Linux command line. This is the shell \u2013 a command process that allows you to control the computer via commands typed into a text interface. This is what, at one time, scared people away from Linux the most (assuming they had to learn a seemingly archaic command line structure to make Linux work). This is no longer the case. With modern desktop Linux, there is no need to ever touch the command line. Graphical Server: This is the sub-system that displays the graphics on your monitor. It is commonly referred to as the X server or just \u201cX\u201d. Desktop Environment: This is the piece of the puzzle that the users actually interact with. There are many desktop environments to choose from (Unity, GNOME, Cinnamon, Enlightenment, KDE, XFCE, etc). Each desktop environment includes built-in applications (such as file managers, configuration tools, web browsers, games, etc). Applications: Desktop environments do not offer the full array of apps. Just like Windows and Mac, Linux offers thousands upon thousands of high-quality software titles that can be easily found and installed. Most modern Linux distributions (more on this in a moment) include App Store-like tools that centralize and simplify application installation. For example: Ubuntu Linux has the Ubuntu Software Center (Figure 1) which allows you to quickly search among the thousands of apps and install them from one centralized location. Sources www.linux.com","title":"Guide to starting Linux"},{"location":"GettingStarted/Linux/#what-is-linux","text":"Just like Windows XP, Windows 7, Windows 8, and Mac OS X, Linux is an operating system. An operating system is software that manages all of the hardware resources associated with your desktop or laptop. To put it simply \u2013 the operating system manages the communication between your software and your hardware. Without the operating system (often referred to as the \u201cOS\u201d), the software wouldn\u2019t function. The OS is comprised of a number of pieces:","title":"What is Linux?"},{"location":"GettingStarted/Linux/#the-bootloader","text":"The software that manages the boot process of your computer. For most users, this will simply be a splash screen that pops up and eventually goes away to boot into the operating system.","title":"The Bootloader:"},{"location":"GettingStarted/Linux/#the-kernel","text":"This is the one piece of the whole that is actually called \u201cLinux\u201d. The kernel is the core of the system and manages the CPU, memory, and peripheral devices. The kernel is the \u201clowest\u201d level of the OS.","title":"The kernel:"},{"location":"GettingStarted/Linux/#daemons","text":"These are background services (printing, sound, scheduling, etc) that either start up during boot, or after you log into the desktop.","title":"Daemons:"},{"location":"GettingStarted/Linux/#the-shell","text":"You\u2019ve probably heard mention of the Linux command line. This is the shell \u2013 a command process that allows you to control the computer via commands typed into a text interface. This is what, at one time, scared people away from Linux the most (assuming they had to learn a seemingly archaic command line structure to make Linux work). This is no longer the case. With modern desktop Linux, there is no need to ever touch the command line.","title":"The Shell:"},{"location":"GettingStarted/Linux/#graphical-server","text":"This is the sub-system that displays the graphics on your monitor. It is commonly referred to as the X server or just \u201cX\u201d.","title":"Graphical Server:"},{"location":"GettingStarted/Linux/#desktop-environment","text":"This is the piece of the puzzle that the users actually interact with. There are many desktop environments to choose from (Unity, GNOME, Cinnamon, Enlightenment, KDE, XFCE, etc). Each desktop environment includes built-in applications (such as file managers, configuration tools, web browsers, games, etc).","title":"Desktop Environment:"},{"location":"GettingStarted/Linux/#applications","text":"Desktop environments do not offer the full array of apps. Just like Windows and Mac, Linux offers thousands upon thousands of high-quality software titles that can be easily found and installed. Most modern Linux distributions (more on this in a moment) include App Store-like tools that centralize and simplify application installation. For example: Ubuntu Linux has the Ubuntu Software Center (Figure 1) which allows you to quickly search among the thousands of apps and install them from one centralized location.","title":"Applications:"},{"location":"GettingStarted/Linux/#sources","text":"www.linux.com","title":"Sources"},{"location":"GettingStarted/Shell/","text":"Fundamental of Shell script/command Where am I in the computer? pwd How to create new directory ? mkdir directory_name How to go to a directary call 'test'? cd test How to create a text file? touch test.txt How to run a python file python hello.py How to install C++, Python, Fortran in Linux? sudo apt-get install build essential How to update Linux? sudo apt-get update How to know who are you? whoaami How to create tree of all files? pstree How to list all running process? top","title":"Guide to Shell Scripts"},{"location":"GettingStarted/Shell/#fundamental-of-shell-scriptcommand","text":"Where am I in the computer? pwd How to create new directory ? mkdir directory_name How to go to a directary call 'test'? cd test How to create a text file? touch test.txt How to run a python file python hello.py How to install C++, Python, Fortran in Linux? sudo apt-get install build essential How to update Linux? sudo apt-get update How to know who are you? whoaami How to create tree of all files? pstree How to list all running process? top","title":"Fundamental of Shell script/command"},{"location":"GettingStarted/cloud/","text":"","title":"Lunching an EC2 (Linux) instance in AWS Cloud"},{"location":"GettingStarted/git/","text":"How to git Reference : How to Git Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub. Open Terminal. Change the current working directory to your local project. Initialize the local directory as a Git repository. git init Add the files in your new local repository. This stages them for the first commit. git add . Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'. Commit the files that you've staged in your local repository. git commit -m \"First commit\" Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again. Copy remote repository URL fieldAt the top of your GitHub repository's Quick Setup page, click to copy the remote repository URL. In Terminal, add the URL for the remote repository where your local repository will be pushed. git remote add origin remote repository URL Sets the new remote git remote -v Verifies the new remote URL Push the changes in your local repository to GitHub. git push origin master Pushes the changes in your local repository up to the remote repository you specified as the origin","title":"How to Git"},{"location":"GettingStarted/git/#how-to-git","text":"Reference : How to Git Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub. Open Terminal. Change the current working directory to your local project. Initialize the local directory as a Git repository. git init Add the files in your new local repository. This stages them for the first commit. git add . Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'. Commit the files that you've staged in your local repository. git commit -m \"First commit\" Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again. Copy remote repository URL fieldAt the top of your GitHub repository's Quick Setup page, click to copy the remote repository URL. In Terminal, add the URL for the remote repository where your local repository will be pushed. git remote add origin remote repository URL Sets the new remote git remote -v Verifies the new remote URL Push the changes in your local repository to GitHub. git push origin master Pushes the changes in your local repository up to the remote repository you specified as the origin","title":"How to git"},{"location":"file/1-create-edit-textFiles/","text":"Create and Edit Text Files vi/vim : Full screen editors; vi is always available since it is a POSIX requirement, vim may need to beinstalled) vi filename : Multiple modes: Command mode allows for navigation and the entering of commands using combinations of one or more letters; these can be prefixed with numeric values for repetition Ex mode allow file manipulation; to enter this mode, type a colon ( : ) followed by the command desired Insert mode to edit text; enter this post by pressing i The ESC key always returns to command mode vi command examples: h : Move one character left j Move down line k Move up line l Move one character right H Move to top of screen L Move to bottom of screen G Move to end of file 0 Move to beginning of line $ Move to end of line i Insert at current position I Insert at beginning of line x Delete character dd Delete line o Create a blank line after current line O Create a blank line before current line Additional commands can be found in the vi/vim man pages Text files can be created by various methods outside of vi, vim or other editors: touch testfile.txt : Creates a blank file called testfile.txt owned by the current user in the current directory echo \"Some value\" > testfile.txt : Creates a file called testfile.txt , owned by the current user in the current directory, containing the text following the echo command (in this instance, \u201cSome value\u201d) Redirection of almost any command will take the output and place it into a file","title":"How to Create and Edit Text Files"},{"location":"file/1-create-edit-textFiles/#create-and-edit-text-files","text":"vi/vim : Full screen editors; vi is always available since it is a POSIX requirement, vim may need to beinstalled) vi filename : Multiple modes: Command mode allows for navigation and the entering of commands using combinations of one or more letters; these can be prefixed with numeric values for repetition Ex mode allow file manipulation; to enter this mode, type a colon ( : ) followed by the command desired Insert mode to edit text; enter this post by pressing i The ESC key always returns to command mode vi command examples: h : Move one character left j Move down line k Move up line l Move one character right H Move to top of screen L Move to bottom of screen G Move to end of file 0 Move to beginning of line $ Move to end of line i Insert at current position I Insert at beginning of line x Delete character dd Delete line o Create a blank line after current line O Create a blank line before current line Additional commands can be found in the vi/vim man pages Text files can be created by various methods outside of vi, vim or other editors: touch testfile.txt : Creates a blank file called testfile.txt owned by the current user in the current directory echo \"Some value\" > testfile.txt : Creates a file called testfile.txt , owned by the current user in the current directory, containing the text following the echo command (in this instance, \u201cSome value\u201d) Redirection of almost any command will take the output and place it into a file","title":"Create and Edit Text Files"},{"location":"file/2-search-files/","text":"Search for Files vi/vim : Moves cursor to a certain location, based on a search In command mode, press f and then a character; this moves to the next occurrence of value in the current line To search for a value in the entire file, in command mode, use / and then type the value Similar to sed, you can use vi/vim to replace values: \u2014 :%s/oldvalue/newvalues/g find : Commonly used to find files by name, by user and/or by type find /start/dir -name \"value\" \u2014 Finds files in /start/dir with the name value -maxdepth \u2014 The number of subdirectories to search -type \u2014 f Regular file -size \u2014 +#[MGT] \u2014 number and type of storage value (mega, giga, terabytes) -perm \u2014 Numeric designation of permissions to look for -exec \u2014 rm \u2018{}\u2019 + \u2014 Execute the command rm on the values/files within the results of the find command Many more values and examples in the man pages","title":"How to Search Files"},{"location":"file/2-search-files/#search-for-files","text":"vi/vim : Moves cursor to a certain location, based on a search In command mode, press f and then a character; this moves to the next occurrence of value in the current line To search for a value in the entire file, in command mode, use / and then type the value Similar to sed, you can use vi/vim to replace values: \u2014 :%s/oldvalue/newvalues/g find : Commonly used to find files by name, by user and/or by type find /start/dir -name \"value\" \u2014 Finds files in /start/dir with the name value -maxdepth \u2014 The number of subdirectories to search -type \u2014 f Regular file -size \u2014 +#[MGT] \u2014 number and type of storage value (mega, giga, terabytes) -perm \u2014 Numeric designation of permissions to look for -exec \u2014 rm \u2018{}\u2019 + \u2014 Execute the command rm on the values/files within the results of the find command Many more values and examples in the man pages","title":"Search for Files"},{"location":"file/3-redirection/","text":"Use Input/Output Redirection, Compare Text Files, Compare Binary Files Redirection is used to direct the output of a command or task into a file, or direct the contents of a file to a command > \u2013 Redirect output to a file, overwriting the contents if any exist >> \u2013 Redirect output to a file, appending to the contents if any exist | \u2013 \u201cPipe\u201d the output to another command and/or file","title":"Redirection, Compare Text and Binary File"},{"location":"file/3-redirection/#use-inputoutput-redirection-compare-text-files-compare-binary-files","text":"Redirection is used to direct the output of a command or task into a file, or direct the contents of a file to a command > \u2013 Redirect output to a file, overwriting the contents if any exist >> \u2013 Redirect output to a file, appending to the contents if any exist | \u2013 \u201cPipe\u201d the output to another command and/or file","title":"Use Input/Output Redirection, Compare Text Files, Compare Binary Files"},{"location":"file/4-archive-compress/","text":"Archive, Compress, Unpack and Decompress Files tar : Can be used to archive, unarchive, compress and decompress files Archives values in the /etc directory in a file called etc.tar : tar cvf etc.tar /etc Decompresses archive: tar xvf etc.tar Archives values in the /etc directory in a file called etc.tar , and also compress that file with gzip : tar cvzf etc.tar /etc List contents of archived file: tar tvf etc.tar c \u2013 Archive v \u2013 Verbose f \u2013 Write to a file x \u2013 Extract z \u2013 gzip compression j \u2013 bzip compression A \u2013 Append files to existing archive t \u2013 List contents","title":"Archive, Compress, Unpack and Decompress Files"},{"location":"file/4-archive-compress/#archive-compress-unpack-and-decompress-files","text":"tar : Can be used to archive, unarchive, compress and decompress files Archives values in the /etc directory in a file called etc.tar : tar cvf etc.tar /etc Decompresses archive: tar xvf etc.tar Archives values in the /etc directory in a file called etc.tar , and also compress that file with gzip : tar cvzf etc.tar /etc List contents of archived file: tar tvf etc.tar c \u2013 Archive v \u2013 Verbose f \u2013 Write to a file x \u2013 Extract z \u2013 gzip compression j \u2013 bzip compression A \u2013 Append files to existing archive t \u2013 List contents","title":"Archive, Compress, Unpack and Decompress Files"},{"location":"file/5-file-permissions/","text":"List, Set and Change Standard File Permissions chmod : Used to change the read, write and execute privileges of a file or directory for the owner, the group(s) they belong to, and all others (often called everyone) chmod 777 somefile.txt : This would change the file somefile.txt to read/write/execute for the owner, the group belonged to, and everyone else (universal permissions) Numeric and character values for the permissions are as follows: r \u2013 4 \u2013 Read permissions w \u2013 2 \u2013 Write permissions x \u2013 1 \u2013 Execute permissions Adding these values together determines the privilege number Example: chmod 755 somefile.txt User: read (4) + write (2) + execute (1) = 7 Group: read (4) + execute (1) = 5 Everyone: read (4) + execute (1) = 5 Permissions can also be changed by single category using character representation Example: chmod g+rw somefile.txt Adds group permissions of read and write to the file called somefile.txt Character values as follows: u \u2013 User g \u2013 Group a \u2013 Everyone r \u2013 Read w \u2013 Write x \u2013 Execute + \u2013 Add the values indicated - \u2013 Remove the values indicated chown : Change ownership to a specific user and/or group chgrp : Change group ownership to a specific group","title":"List, Set and Change Standard File Permissions"},{"location":"file/5-file-permissions/#list-set-and-change-standard-file-permissions","text":"chmod : Used to change the read, write and execute privileges of a file or directory for the owner, the group(s) they belong to, and all others (often called everyone) chmod 777 somefile.txt : This would change the file somefile.txt to read/write/execute for the owner, the group belonged to, and everyone else (universal permissions) Numeric and character values for the permissions are as follows: r \u2013 4 \u2013 Read permissions w \u2013 2 \u2013 Write permissions x \u2013 1 \u2013 Execute permissions Adding these values together determines the privilege number Example: chmod 755 somefile.txt User: read (4) + write (2) + execute (1) = 7 Group: read (4) + execute (1) = 5 Everyone: read (4) + execute (1) = 5 Permissions can also be changed by single category using character representation Example: chmod g+rw somefile.txt Adds group permissions of read and write to the file called somefile.txt Character values as follows: u \u2013 User g \u2013 Group a \u2013 Everyone r \u2013 Read w \u2013 Write x \u2013 Execute + \u2013 Add the values indicated - \u2013 Remove the values indicated chown : Change ownership to a specific user and/or group chgrp : Change group ownership to a specific group","title":"List, Set and Change Standard File Permissions"},{"location":"file/6-transfer-files/","text":"Transfer Files Securely via SFTP/SCP scp : Based on the SSH secure protocol for transfer of files Transfer files to/from a server: scp user@RemoteIP:/remote/dir/myfile.txt /home/user Copy the remote file called myfile.txt to the local /home/user directory : scp myfile.txt user@RemoteIP:/remote/dir Copies the local file called myfile.txt to the remote directory /remote/dir : sftp : SSH-based file transfer program whose behavior is based on the less-secure program, FTP Same format as the scp in terms of individual files or directories Add batch processing capabilities: sftp -b batch.file Similar to expect scripts, using FTP commands to run through many transactions in one listing.","title":"Transfer Files Securely via SFTP/SCP"},{"location":"file/6-transfer-files/#transfer-files-securely-via-sftpscp","text":"scp : Based on the SSH secure protocol for transfer of files Transfer files to/from a server: scp user@RemoteIP:/remote/dir/myfile.txt /home/user Copy the remote file called myfile.txt to the local /home/user directory : scp myfile.txt user@RemoteIP:/remote/dir Copies the local file called myfile.txt to the remote directory /remote/dir : sftp : SSH-based file transfer program whose behavior is based on the less-secure program, FTP Same format as the scp in terms of individual files or directories Add batch processing capabilities: sftp -b batch.file Similar to expect scripts, using FTP commands to run through many transactions in one listing.","title":"Transfer Files Securely via SFTP/SCP"},{"location":"network/E-1-Network-start/","text":"Configure Network Services to Start on Boot \u2013 systemd Sysvinit (older service management, CentOS/RHEL 6.x, Ubuntu/Debian prior to 10.04/8) Install an example server service: yum install openssh-server Enable the service to start on reboot: - chkconfig openssh-server Start the service in current session: - service openssh-server start Systemd (modern service management, all recent distributions) Install an example server service: yum install openssh-server Enable the service to start on reboot: systemctl enable openssh-server Start the service in current session: systemctl start openssh-server Query the status of a service (running or otherwise): systemctl status openssh-server","title":"Configure Network Services"},{"location":"network/E-1-Network-start/#configure-network-services-to-start-on-boot-systemd","text":"Sysvinit (older service management, CentOS/RHEL 6.x, Ubuntu/Debian prior to 10.04/8) Install an example server service: yum install openssh-server Enable the service to start on reboot: - chkconfig openssh-server Start the service in current session: - service openssh-server start Systemd (modern service management, all recent distributions) Install an example server service: yum install openssh-server Enable the service to start on reboot: systemctl enable openssh-server Start the service in current session: systemctl start openssh-server Query the status of a service (running or otherwise): systemctl status openssh-server","title":"Configure Network Services to Start on Boot \u2013 systemd"},{"location":"network/E-10-Network-Virtual-Web-Host/","text":"","title":"Network Virtual Web Hosting"},{"location":"network/E-2-Network-Packet-Filtering/","text":"","title":"Network Packet Filtering"},{"location":"network/E-3-Network-Performance/","text":"","title":"Network Performance"},{"location":"network/E-4-Network-Firewall/","text":"","title":"Network Firewall"},{"location":"network/E-5-Network-Sharing/","text":"","title":"Network Sharing"},{"location":"network/E-6-Network-SMTP/","text":"","title":"Network SMTP"},{"location":"network/E-7-Network-SSH/","text":"","title":"Network SSH"},{"location":"network/E-8-Network-HTTP-Server/","text":"","title":"Network HTTP"},{"location":"network/E-9-Network-SSL-Apache/","text":"","title":"Network SSL"},{"location":"process/7-priority-process/","text":"Change the Priority of a Process/Identify Resource Utilization by Process jobs : Displays minimal information about processes associated with the current session ps : By default, ps only displays process that were run from its own terminal \u2013A \\ -e : Displays all processes on a system -u : Displays processes given by a specified user -H : Groups processes and use indentation to show the hierarchy of relationships between processes -w : Tells ps not to truncate to system uptime : Find uptime and display load average bg : Restores a job to running status, but in the background fg : Use CTRL+Z to pause a program and, then fg to send the program to foreground kill : Can be used to stop executing processes, uses PID nohup : Run a command immune to hangups, with output to console or non-tty killall : Can be used to kill all processes of a certain name free : Show free memory and swap Common kill signals: SIGHUP 1 HANGUP SIGINT 2 INTERRUPT FROM KEYBOARD SIGKILL 9 KILL SIGNAL This signal is not blockable and causes the program to terminate abruptly; only use if you can\u2019t terminate with 15 SIGTERM 15 TERMINATION SIGNAL : Asks the program to finish what it is doing, then exits; clean exist; the preferred way of killing processes SIGSTOP 17,19,23 STOP THE PROCESS : When a child process exits from a parent process it sends signal 1 Signals in the man page man-k signal","title":"Change the Priority of a Process"},{"location":"process/7-priority-process/#change-the-priority-of-a-processidentify-resource-utilization-by-process","text":"jobs : Displays minimal information about processes associated with the current session ps : By default, ps only displays process that were run from its own terminal \u2013A \\ -e : Displays all processes on a system -u : Displays processes given by a specified user -H : Groups processes and use indentation to show the hierarchy of relationships between processes -w : Tells ps not to truncate to system uptime : Find uptime and display load average bg : Restores a job to running status, but in the background fg : Use CTRL+Z to pause a program and, then fg to send the program to foreground kill : Can be used to stop executing processes, uses PID nohup : Run a command immune to hangups, with output to console or non-tty killall : Can be used to kill all processes of a certain name free : Show free memory and swap","title":"Change the Priority of a Process/Identify Resource Utilization by Process"},{"location":"process/7-priority-process/#common-kill-signals","text":"SIGHUP 1 HANGUP SIGINT 2 INTERRUPT FROM KEYBOARD SIGKILL 9 KILL SIGNAL This signal is not blockable and causes the program to terminate abruptly; only use if you can\u2019t terminate with 15 SIGTERM 15 TERMINATION SIGNAL : Asks the program to finish what it is doing, then exits; clean exist; the preferred way of killing processes SIGSTOP 17,19,23 STOP THE PROCESS : When a child process exits from a parent process it sends signal 1 Signals in the man page man-k signal","title":"Common kill signals:"},{"location":"process/8-start-processes-services/","text":"Manage the Startup Processes and Services Reboot the system: reboot systemctl reboot shutdown -r now -r : reboot now : Reboot immmediately +5 : Wait 5 minutes and then reboot +0 : Same as now 01:01 :1:01 AM shutdown -c : Cancel a scheduled shutdown init 6 : The init system in Red Hat 7 is depreciated. However, runlevels are still compatible for thiscurrent version for backwards compatibility Shutdown the system (no reboot/power off): systemctl halt halt shutdown -h now ( -h means halt) init 0 Physically power off the system: systemctl poweroff poweroff shutdown -P","title":"Manage the Startup Processes and Services"},{"location":"process/8-start-processes-services/#manage-the-startup-processes-and-services","text":"Reboot the system: reboot systemctl reboot shutdown -r now -r : reboot now : Reboot immmediately +5 : Wait 5 minutes and then reboot +0 : Same as now 01:01 :1:01 AM shutdown -c : Cancel a scheduled shutdown init 6 : The init system in Red Hat 7 is depreciated. However, runlevels are still compatible for thiscurrent version for backwards compatibility Shutdown the system (no reboot/power off): systemctl halt halt shutdown -h now ( -h means halt) init 0 Physically power off the system: systemctl poweroff poweroff shutdown -P","title":"Manage the Startup Processes and Services"},{"location":"process/9-user-processes/","text":"Managing User Processes nice : Run a program with modified scheduling priority renice : Alter priority of running processes top : Display Linux processes While running: K : Kills processes Q : Quits processes r : Change process priority s : Change update rate P : Sort by CPU usage m : Sort by memory usage; can also show uptime, memory info, and load average From the command line: -d : Specifies delay between updates -p : Lists up to 20 specific PIDs -n : Display certain number of updates then quit -b : Batch mode","title":"Managing User Processes"},{"location":"process/9-user-processes/#managing-user-processes","text":"nice : Run a program with modified scheduling priority renice : Alter priority of running processes top : Display Linux processes While running: K : Kills processes Q : Quits processes r : Change process priority s : Change update rate P : Sort by CPU usage m : Sort by memory usage; can also show uptime, memory info, and load average From the command line: -d : Specifies delay between updates -p : Lists up to 20 specific PIDs -n : Display certain number of updates then quit -b : Batch mode","title":"Managing User Processes"},{"location":"software/A-file-permissions-ownership/","text":"List, Set and Change Standard File Permissions chmod : Used to change the read, write and execute privileges of a file or directory for the owner, the group(s) they belong to, and all others (often called everyone) chmod 777 somefile.txt : This would change the file somefile.txt to read/write/execute for the owner, the group belonged to, and everyone else (universal permissions) Numeric and character values for the permissions are as follows: r \u2013 4 \u2013 Read permissions w \u2013 2 \u2013 Write permissions x \u2013 1 \u2013 Execute permissions Adding these values together determines the privilege number Example: chmod 755 somefile.txt User: read (4) + write (2) + execute (1) = 7 Group: read (4) + execute (1) = 5 Everyone: read (4) + execute (1) = 5 Permissions can also be changed by single category using character representation Example: chmod g+rw somefile.txt Adds group permissions of read and write to the file called somefile.txt Character values as follows: u \u2013 User g \u2013 Group a \u2013 Everyone r \u2013 Read w \u2013 Write x \u2013 Execute + \u2013 Add the values indicated - \u2013 Remove the values indicated chown : Change ownership to a specific user and/or group chgrp : Change group ownership to a specific group","title":"Stting Standard File Permissions"},{"location":"software/A-file-permissions-ownership/#list-set-and-change-standard-file-permissions","text":"chmod : Used to change the read, write and execute privileges of a file or directory for the owner, the group(s) they belong to, and all others (often called everyone) chmod 777 somefile.txt : This would change the file somefile.txt to read/write/execute for the owner, the group belonged to, and everyone else (universal permissions) Numeric and character values for the permissions are as follows: r \u2013 4 \u2013 Read permissions w \u2013 2 \u2013 Write permissions x \u2013 1 \u2013 Execute permissions Adding these values together determines the privilege number Example: chmod 755 somefile.txt User: read (4) + write (2) + execute (1) = 7 Group: read (4) + execute (1) = 5 Everyone: read (4) + execute (1) = 5 Permissions can also be changed by single category using character representation Example: chmod g+rw somefile.txt Adds group permissions of read and write to the file called somefile.txt Character values as follows: u \u2013 User g \u2013 Group a \u2013 Everyone r \u2013 Read w \u2013 Write x \u2013 Execute + \u2013 Add the values indicated - \u2013 Remove the values indicated chown : Change ownership to a specific user and/or group chgrp : Change group ownership to a specific group","title":"List, Set and Change Standard File Permissions"},{"location":"software/B-installing-software/","text":"Installing Software Packages (Debian/Ubuntu) /etc/apt/sources.list : Stores the repository locations that apt uses to search for packages specific to your system apt-get : Package handling and installation utility for Debian-based distributions Installs packages by name and includes dependent packages during install dpkg : Installs .deb package files on Debian-based systems -i \u2013 Install as well as configure package -r \u2013 Remove package -configure \u2013 Configures a package -c \u2013 List contents of a package - -s \u2013 List status of package (installed or not) - apt-cache : Allows searching of named package or shows installed packages apt-cache pkgnames \u2013 Show installed apt-cache search \u2013 Search for named package dpkg-reconfigure : Reconfigure an already-installed package aptitude : High level package management interface for Debian-based distributions","title":"Installing Software Packages"},{"location":"software/B-installing-software/#installing-software-packages-debianubuntu","text":"/etc/apt/sources.list : Stores the repository locations that apt uses to search for packages specific to your system apt-get : Package handling and installation utility for Debian-based distributions Installs packages by name and includes dependent packages during install dpkg : Installs .deb package files on Debian-based systems -i \u2013 Install as well as configure package -r \u2013 Remove package -configure \u2013 Configures a package -c \u2013 List contents of a package - -s \u2013 List status of package (installed or not) - apt-cache : Allows searching of named package or shows installed packages apt-cache pkgnames \u2013 Show installed apt-cache search \u2013 Search for named package dpkg-reconfigure : Reconfigure an already-installed package aptitude : High level package management interface for Debian-based distributions","title":"Installing Software Packages (Debian/Ubuntu)"},{"location":"software/C-shell/","text":"Shell echo - $$ \u2013 Displays current shell process $? \u2013 Prints the exit value of the command to the screen Exit code 0 \u2013 Means command completed successfully $! \u2013 PID of last job run in background $* \u2013 Expands all parameters passed $$ \u2013 Contains current process ID $@ \u2013 Each passed parameter expands to a different word $0 \u2013 Show the name of the shell or script $_ \u2013 Set at shell startup and contains the absolute file name of the shell/script being execute; expands last argument to the previous command","title":"Shell commands notation"},{"location":"software/C-shell/#shell","text":"echo - $$ \u2013 Displays current shell process $? \u2013 Prints the exit value of the command to the screen Exit code 0 \u2013 Means command completed successfully $! \u2013 PID of last job run in background $* \u2013 Expands all parameters passed $$ \u2013 Contains current process ID $@ \u2013 Each passed parameter expands to a different word $0 \u2013 Show the name of the shell or script $_ \u2013 Set at shell startup and contains the absolute file name of the shell/script being execute; expands last argument to the previous command","title":"Shell"},{"location":"storage/F-storage-management/","text":"Storage Management Standard File Systems Partitioning fdisk/gdisk /dev/drive Allows us to create a partition from the available indicated disk Can set type of partition (GPT or MBT depending on use), list the partition types in the menu Format the filesystem partition created: mkfs -t ext4 /dev/disk1 Formats the disk partition disk1 as an ext4 partition Mount the formatted partition: mkdir /mnt/mount mount -t ext4 /dev/disk1 /mnt/mount Mounts the formatted drive, as an ext4 mount on the created directory Persistently mounting the disk above Obtain the UUID of the device: ls -al /dev/disk/by-uuid Add entry to /etc/fstab : UUID=UUDI_OBTAINED /mnt/mount ext4 defaults 0 Mount the defined entry automatically, if not mounted in current session: mount -a This will scan all defined mount points, and if not mounted, mount them using the definitions in /etc/fstab Encrypted File Systems System support encrypted file system query: grep -I config_dm_crypt /boot/config-$(uname -r) Determine if module is loaded: lsmod | grep dm_crypt Load module if needed: modprobe dm_crypt Partitioning : Handled the same way as a typical disk and drive as defined above in the \u201cStandard File Systems\u201d section Install the cryptsetup utility: yum install cryptsetup Default encryption key setup Luks \u2013 Linux Unified Key Setup Set up the partitions with passphrase: cryptsetup -y luksformat /dev/disk1 Prompts for passphrase for unencrypting drive during mount/use Large drives will take a long time to encrypt Open partition for use: cryptsetup luksOpen /dev/disk1 reference_name Format the filesystem partition created, using the mapper overlay created above Handled the same way as a typical disk and drive as defined above in the \u201cStandard File Systems\u201d section Example: mkfs-t ext4 /dev/mapper/reference_name Mount the drive: mount /dev/mapper/reference_name /mnt/mount Close the partition once used and unmounted: cryptsetup luksClose reference_name","title":"Storage Management"},{"location":"storage/F-storage-management/#storage-management","text":"","title":"Storage Management"},{"location":"storage/F-storage-management/#standard-file-systems","text":"Partitioning fdisk/gdisk /dev/drive Allows us to create a partition from the available indicated disk Can set type of partition (GPT or MBT depending on use), list the partition types in the menu Format the filesystem partition created: mkfs -t ext4 /dev/disk1 Formats the disk partition disk1 as an ext4 partition Mount the formatted partition: mkdir /mnt/mount mount -t ext4 /dev/disk1 /mnt/mount Mounts the formatted drive, as an ext4 mount on the created directory Persistently mounting the disk above Obtain the UUID of the device: ls -al /dev/disk/by-uuid Add entry to /etc/fstab : UUID=UUDI_OBTAINED /mnt/mount ext4 defaults 0 Mount the defined entry automatically, if not mounted in current session: mount -a This will scan all defined mount points, and if not mounted, mount them using the definitions in /etc/fstab","title":"Standard File Systems"},{"location":"storage/F-storage-management/#encrypted-file-systems","text":"System support encrypted file system query: grep -I config_dm_crypt /boot/config-$(uname -r) Determine if module is loaded: lsmod | grep dm_crypt Load module if needed: modprobe dm_crypt Partitioning : Handled the same way as a typical disk and drive as defined above in the \u201cStandard File Systems\u201d section Install the cryptsetup utility: yum install cryptsetup Default encryption key setup Luks \u2013 Linux Unified Key Setup Set up the partitions with passphrase: cryptsetup -y luksformat /dev/disk1 Prompts for passphrase for unencrypting drive during mount/use Large drives will take a long time to encrypt Open partition for use: cryptsetup luksOpen /dev/disk1 reference_name Format the filesystem partition created, using the mapper overlay created above Handled the same way as a typical disk and drive as defined above in the \u201cStandard File Systems\u201d section Example: mkfs-t ext4 /dev/mapper/reference_name Mount the drive: mount /dev/mapper/reference_name /mnt/mount Close the partition once used and unmounted: cryptsetup luksClose reference_name","title":"Encrypted File Systems"},{"location":"user/D-user-accounts/","text":"Create, Delete and Modify Local User Accounts /etc/passwd \u2013 This file contains the list of users on the system. Format: username:password:UID:PrimaryGUID:comment:homedir:defaultshell Example: linuxacademy:x:539:100:linux academy act:/home/linuxacademy:/bin/bash User IDs under 100 are reserved for system users Normal user accounts have IDs between 500-1000 Can directly edit the passwd file to add, remove or modify users Changing the shell section of the format to /bin/false will prevent the user shell login access to the system /etc/passwd permissions must be readable by all, but /etc/shadow only should be readable by superusers pwck : Verifies the integrity of the users and authentication information. Checks entries for /etc/passwd and /etc/shadow for proper format /etc/skel : Skeleton file used when creating new users; allows you to set what files and settings need to be configured as default for every user added useradd/adduser : Creates a user on the system. Some distributions such as Slackware use adduser instead of useradd . Note: Both username and password are case-sensitive. -c \u2013 Comment; can be used as a comment, but is currently used for user\u2019s full name -d \u2013 Sets the user home directory; by default it is /home/user, but can be set to anything - e \u2013 Expire-date; sets the user\u2019s expiration date; on this date the account password will \u201cexpire\u201d and the user will no longer have access; format:YYYY-MM-DD -p \u2013 Sets an encrypted password; the pre-encrypted password is added as-is to your /etc/passwd and /etc/shadow files; this is not the advised method of setting the password -M \u2013 Does not create the home directory, even if the /etc/login.defs has the default set to yes - -m \u2013 Creates a home directory at /home/username if it does not exist; files contained in the /etc/ skel directory will be copied into the new user\u2019s home directory; useradd creates a user\u2019s home directory by default -G \u2013 Defines all the other groups that the member belongs to; separate each group by a comma -g \u2013 Sets the default group for the user; this is the user\u2019s group when the user first logs in - f \u2013 Defines the number of days after a password expires before an account is permanently disabled; a value of 0 immediately disables the account after password expiration, whereas -1 disables the entire feature -k \u2013 Defines which directory skeleton to use when creating a user; allows you to have different default settings for different users; if the option is not set, it uses the /etc/skel format by default /etc/default/useradd \u2013 Location of default settings for the useradd command /etc/shadow \u2013 Contains the encrypted passwords for the user accounts on the system; this and the /etc/passwd file can be directly modified; the useradd and usermod commands are an interface to automatically modify these files. Format: - username:password:days_until_change_allowed:days_before_change_required:days_of_warning_before_expiration:days_between_expiration_activation:expiration_date:special_flag Flag names are self-explanatory; however, a value of -1 or 99999 will indicate that the feature is disabled for that user chage \u2013 Changes and manages user expiry information; changes the number of days between required password change, and forces password changes for users after x number days -E \u2013 Sets the date that the user\u2019s password will expire -I \u2013 Sets the number of days of inactivity after a password has expired before locking account \u2013m \u2013 Sets minimum number of days between password changes -M \u2013 Sets maximum number of days which a password is valid userdel \u2013 Deletes a user account and associated files. -f \u2013 Forces the removal of the user account even if the user is still logged in; also deletes the user\u2019s home directory and mail; not typically recommended \u2014 you can use kill to boot a user from your system and then remove the user account -r \u2013 Removes the user\u2019s home directory, files located in the user\u2019s home directory and the user\u2019s mail; does not remove files owned by the user outside of their home directory \u2014 use the find command to find files based off owner. usermod \u2013 Modifies a user account -d \u2013 Sets the user\u2019s home directory to a new directory -e \u2013 Sets date for when the user account will expire; use YYYY-MM-DD -f \u2013 Number of days after a password expires until account is permanently disabled -g \u2013 Group ID/name of the user\u2019s new default login group -G \u2013 List of extra groups the user is a member of -l \u2013 Changes the login name of the user -L \u2013 Locks the user\u2019s account #### Create, Delete and Modify Local Groups groupdel \u2013 Deleted group; if any user has this group as their primary group, then the group cannot be removed until it is removed as the primary group groupmod \u2013 Modify group name or group ID - -g \u2013 Specify a new group ID; returns error if group already exists -o \u2013 When used with -g , allows two groups to share the same group ID - -n \u2013 Specifies a new group name /etc/group \u2013 This file contains a list of groups and all the members associated with the groups Example of /etc/group : groupName:Password:GUID:userlist groupadd \u2013 Adds a group to the system - -g \u2013 Specifies a group idea; if not specified it will auto-select one for you -r \u2013 Instructs groupadd to pick a group ID; less than 500 used for system groups - -f \u2013 Forces group creation even if another group already exists","title":"Create, Delete and Modify Local Groups"},{"location":"user/D-user-accounts/#create-delete-and-modify-local-user-accounts","text":"/etc/passwd \u2013 This file contains the list of users on the system. Format: username:password:UID:PrimaryGUID:comment:homedir:defaultshell Example: linuxacademy:x:539:100:linux academy act:/home/linuxacademy:/bin/bash User IDs under 100 are reserved for system users Normal user accounts have IDs between 500-1000 Can directly edit the passwd file to add, remove or modify users Changing the shell section of the format to /bin/false will prevent the user shell login access to the system /etc/passwd permissions must be readable by all, but /etc/shadow only should be readable by superusers pwck : Verifies the integrity of the users and authentication information. Checks entries for /etc/passwd and /etc/shadow for proper format /etc/skel : Skeleton file used when creating new users; allows you to set what files and settings need to be configured as default for every user added useradd/adduser : Creates a user on the system. Some distributions such as Slackware use adduser instead of useradd . Note: Both username and password are case-sensitive. -c \u2013 Comment; can be used as a comment, but is currently used for user\u2019s full name -d \u2013 Sets the user home directory; by default it is /home/user, but can be set to anything - e \u2013 Expire-date; sets the user\u2019s expiration date; on this date the account password will \u201cexpire\u201d and the user will no longer have access; format:YYYY-MM-DD -p \u2013 Sets an encrypted password; the pre-encrypted password is added as-is to your /etc/passwd and /etc/shadow files; this is not the advised method of setting the password -M \u2013 Does not create the home directory, even if the /etc/login.defs has the default set to yes - -m \u2013 Creates a home directory at /home/username if it does not exist; files contained in the /etc/ skel directory will be copied into the new user\u2019s home directory; useradd creates a user\u2019s home directory by default -G \u2013 Defines all the other groups that the member belongs to; separate each group by a comma -g \u2013 Sets the default group for the user; this is the user\u2019s group when the user first logs in - f \u2013 Defines the number of days after a password expires before an account is permanently disabled; a value of 0 immediately disables the account after password expiration, whereas -1 disables the entire feature -k \u2013 Defines which directory skeleton to use when creating a user; allows you to have different default settings for different users; if the option is not set, it uses the /etc/skel format by default /etc/default/useradd \u2013 Location of default settings for the useradd command /etc/shadow \u2013 Contains the encrypted passwords for the user accounts on the system; this and the /etc/passwd file can be directly modified; the useradd and usermod commands are an interface to automatically modify these files. Format: - username:password:days_until_change_allowed:days_before_change_required:days_of_warning_before_expiration:days_between_expiration_activation:expiration_date:special_flag Flag names are self-explanatory; however, a value of -1 or 99999 will indicate that the feature is disabled for that user chage \u2013 Changes and manages user expiry information; changes the number of days between required password change, and forces password changes for users after x number days -E \u2013 Sets the date that the user\u2019s password will expire -I \u2013 Sets the number of days of inactivity after a password has expired before locking account \u2013m \u2013 Sets minimum number of days between password changes -M \u2013 Sets maximum number of days which a password is valid userdel \u2013 Deletes a user account and associated files. -f \u2013 Forces the removal of the user account even if the user is still logged in; also deletes the user\u2019s home directory and mail; not typically recommended \u2014 you can use kill to boot a user from your system and then remove the user account -r \u2013 Removes the user\u2019s home directory, files located in the user\u2019s home directory and the user\u2019s mail; does not remove files owned by the user outside of their home directory \u2014 use the find command to find files based off owner. usermod \u2013 Modifies a user account -d \u2013 Sets the user\u2019s home directory to a new directory -e \u2013 Sets date for when the user account will expire; use YYYY-MM-DD -f \u2013 Number of days after a password expires until account is permanently disabled -g \u2013 Group ID/name of the user\u2019s new default login group -G \u2013 List of extra groups the user is a member of -l \u2013 Changes the login name of the user -L \u2013 Locks the user\u2019s account #### Create, Delete and Modify Local Groups groupdel \u2013 Deleted group; if any user has this group as their primary group, then the group cannot be removed until it is removed as the primary group groupmod \u2013 Modify group name or group ID - -g \u2013 Specify a new group ID; returns error if group already exists -o \u2013 When used with -g , allows two groups to share the same group ID - -n \u2013 Specifies a new group name /etc/group \u2013 This file contains a list of groups and all the members associated with the groups Example of /etc/group : groupName:Password:GUID:userlist groupadd \u2013 Adds a group to the system - -g \u2013 Specifies a group idea; if not specified it will auto-select one for you -r \u2013 Instructs groupadd to pick a group ID; less than 500 used for system groups - -f \u2013 Forces group creation even if another group already exists","title":"Create, Delete and Modify Local User Accounts"},{"location":"virtual/G-virtualization/","text":"Virtualization Configure a Hypervisor to Host Virtual Guests Install and configure the necessary packages: yum install -y qemu-kvm qemu-img Install and configure the virtual manager GUI: yum install -y virt-manager","title":"Virtualization"},{"location":"virtual/G-virtualization/#virtualization","text":"","title":"Virtualization"},{"location":"virtual/G-virtualization/#configure-a-hypervisor-to-host-virtual-guests","text":"Install and configure the necessary packages: yum install -y qemu-kvm qemu-img Install and configure the virtual manager GUI: yum install -y virt-manager","title":"Configure a Hypervisor to Host Virtual Guests"}]}